CREATE TABLE  IF NOT EXISTS core.users(
	user_id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	email VARCHAR(255) NOT NULL UNIQUE,
	age INT CHECK(age BETWEEN 18 AND 120),
	gender VARCHAR(20),
	country VARCHAR(100),
	created_at timestamptz not null default now(),
    constraint check_email_format check ( email ~*  '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$')


);

CREATE TABLE IF NOT EXISTS core.products(
	product_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	cost NUMERIC(10,2) NOT NULL CHECK (cost >= 0),
	category VARCHAR(255),
	name VARCHAR(100),
	brand VARCHAR(100),
	retail_price NUMERIC(10,2) NOT NULL CHECK (retail_price >= cost),
	department VARCHAR(100),
	sku VARCHAR(150) UNIQUE,
	distribution_center_id BIGINT,
	created_at timestamptz not null  default now()

);

-- Distribution Centers
CREATE TABLE if not exists core.distribution_centers(
    center_id bigint generated by default as identity primary key,
    name varchar(255) not null,
    latitude numeric(10, 7),
    longitude numeric(10, 7)
);

-- Inventory Items
create table if not exists core.inventory_items(
    inventory_item_id bigint generated by default as identity primary key,
    product_id bigint not null,
    created_at timestamptz,
    sold_at timestamptz,
    cost numeric(10,2) check ( cost is null or cost >= 0 ),
    product_distribution_center_id varchar(255) not null
);

-- Orders
create table if not exists core.orders(
    order_id bigint generated by default as identity primary key,
    user_id bigint not null,
    status varchar(50) not null check ( status in ('Complete','Cancelled','Processing','Shipped','Returned') ),
    created_at timestamptz,
    returned_at timestamptz,
    shipped_at timestamptz,
    delivered_at timestamptz,
    num_of_item int check ( num_of_item is null or num_of_item >= 0 ),
    constraint  check_date_flow check (
        (shipped_at is null or shipped_at >= created_at) and
        (delivered_at is null or (shipped_at is null or delivered_at >= orders.shipped_at))
        )
);

-- Order Items
create table if not exists core.order_items(
    order_item_id bigint generated by default as identity primary key,
    order_id bigint not null,
    user_id bigint not null,
    product_id bigint not null,
    inventory_item_id bigint not null,
    status varchar(50),
    created_at timestamptz not null default now(),
    sale_price numeric(10,2) not null check ( sale_price >= 0),
    shipped_at timestamptz,
    delivered_at timestamptz,
    returned_at timestamptz
);

-- Events
create table if not exists core.events(
    event_id bigint generated by default as identity primary key,
    user_id bigint,
    sequence_number int,
    session_id varchar(255),
    created_at timestamptz not null default now(),
    ip_address inet,
    city varchar(100),
    state varchar(100),
    postal_code varchar(20),
    browser varchar(100),
    traffic_source varchar(100),
    uri text,
    event_type varchar(50)
);
