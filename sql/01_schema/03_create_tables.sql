DROP TABLE IF EXISTS core.users CASCADE;
DROP TABLE IF EXISTS core.products CASCADE;
DROP TABLE IF EXISTS core.distribution_centers CASCADE;
DROP TABLE IF EXISTS core.inventory_items CASCADE;
DROP TABLE IF EXISTS core.order_items CASCADE;
DROP TABLE IF EXISTS core.orders CASCADE;
DROP TABLE IF EXISTS core.events CASCADE;







CREATE TABLE  IF NOT EXISTS core.users(
	user_id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	first_name text,
	last_name text,
	email text NOT NULL UNIQUE,
	age INT CHECK(age BETWEEN 18 AND 120),
	gender text,
    state text,
    street_address text,
    postal_code text,
    city text,
	country text,
    latitude numeric(10, 7),
    longitude numeric(10, 7),
    traffic_source text,
	created_at timestamptz not null default now(),
    constraint check_email_format check ( email ~*  '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$')


);

CREATE TABLE IF NOT EXISTS core.products(
	product_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	cost NUMERIC(10,2) NOT NULL CHECK (cost >= 0),
	category text,
	name text,
	brand text,
	retail_price NUMERIC(10,2) NOT NULL CHECK (retail_price >= cost),
	department text,
	sku text UNIQUE,
	distribution_center_id BIGINT
);

-- Distribution Centers
CREATE TABLE if not exists core.distribution_centers(
    center_id bigint generated by default as identity primary key,
    name text not null,
    latitude numeric(10, 7),
    longitude numeric(10, 7)
);

-- Inventory Items
create table if not exists core.inventory_items(
    inventory_item_id bigint generated by default as identity primary key,
    product_id bigint not null,
    created_at timestamptz,
    sold_at timestamptz,
    cost numeric(10,2) check ( cost is null or cost >= 0 ),
    product_category text,
    product_name text,
    product_brand text,
    product_retail_price NUMERIC(10,2),
    product_department text,
    product_sku text,
    product_distribution_center_id bigint
);

-- Orders
create table if not exists core.orders(
    order_id bigint generated by default as identity primary key,
    user_id bigint not null,
    status text not null check ( status in ('Complete','Cancelled','Processing','Shipped','Returned') ),
    gender text,
    created_at timestamptz,
    returned_at timestamptz,
    shipped_at timestamptz,
    delivered_at timestamptz,
    num_of_item int check ( num_of_item is null or num_of_item >= 0 ),
    constraint  check_date_flow check (
        (shipped_at is null or shipped_at >= created_at) and
        (delivered_at is null or (shipped_at is null or delivered_at >= orders.shipped_at))
        )
);

-- Order Items
create table if not exists core.order_items(
    order_item_id bigint generated by default as identity primary key,
    order_id bigint not null,
    user_id bigint not null,
    product_id bigint not null,
    inventory_item_id bigint not null,
    status text,
    created_at timestamptz default now(),
    shipped_at timestamptz,
    delivered_at timestamptz,
    returned_at timestamptz,
    sale_price numeric(10,2) not null check ( sale_price >= 0)
);

-- Events
create table if not exists core.events(
    event_id bigint generated by default as identity primary key,
    user_id bigint,
    sequence_number bigint,
    session_id text,
    created_at timestamptz null default now(),
    ip_address inet,
    city text,
    state text,
    postal_code text,
    browser text,
    traffic_source text,
    uri text,
    event_type text
);

